version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fumu-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fumu_production
      POSTGRES_USER: fumu_user
      POSTGRES_PASSWORD: fumu_secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - fumu-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fumu-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass fumu_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - fumu-network

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: fumu-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://fumu_user:fumu_secure_password@postgres:5432/fumu_production
      REDIS_HOST: redis
      REDIS_PASSWORD: fumu_redis_password
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - fumu-network
    volumes:
      - ./temp:/app/temp

  # Web Frontend
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: fumu-web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://api:3001
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - fumu-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: fumu-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
      - api
    networks:
      - fumu-network

volumes:
  postgres_data:
  redis_data:

networks:
  fumu-network:
    driver: bridge
